Proof Obligation 1: (Unproved)
Graph: total function obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 9:5
(forall g:Graph! &
  is_(inv_Graph(g), bool))

Proof Obligation 2: (Unproved)
Graph: map apply obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 9:40
(forall g:Graph! &
  (forall i in set (dom g) &
    i in set dom g))

Proof Obligation 3: (Unproved)
Graph: invariant satisfiability obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 9:5
exists g : map nat to (seq of nat) & (forall i in set (dom g) & ((elems (g(i))) subset (dom g)))

Proof Obligation 4: (Unchecked)
Obligation for missing measure function
revers: recursive function obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 18:12
(forall l:seq of nat &
  (not [] = l =>
    (exists [h] ^ t:seq of nat & [h] ^ t = l => let [h] ^ t = l in
      measure_revers(l) > measure_revers(t))))

Proof Obligation 5: (Unproved)
revers: cases exhaustive obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 16:3
(forall l:seq of nat &
  l = [] or (exists [h] ^ t:seq of nat & l = [h] ^ t))

Proof Obligation 6: (Unchecked)
Obligation for missing measure function
depthf: recursive function obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 27:17
(forall l:seq of nat, g:Graph, vis:seq of nat &
  (not [] = l =>
    (exists [h] ^ t:seq of nat & [h] ^ t = l => let [h] ^ t = l in
      ((h in set (elems (vis))) =>
        measure_depthf(l, g, vis) > measure_depthf(t, g, vis)))))

Proof Obligation 7: (Unchecked)
Obligation for missing measure function
depthf: recursive function obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 28:17
(forall l:seq of nat, g:Graph, vis:seq of nat &
  (not [] = l =>
    (exists [h] ^ t:seq of nat & [h] ^ t = l => let [h] ^ t = l in
      (not (h in set (elems (vis))) =>
        measure_depthf(l, g, vis) > measure_depthf(g(h) ^ t, g, [h] ^ vis)))))

Proof Obligation 8: (Unproved)
depthf: map apply obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 28:24
(forall l:seq of nat, g:Graph, vis:seq of nat &
  (not [] = l =>
    (exists [h] ^ t:seq of nat & [h] ^ t = l => let [h] ^ t = l in
      (not (h in set (elems (vis))) =>
        h in set dom g))))

Proof Obligation 9: (Unproved)
depthf: cases exhaustive obligation in 'A' (/home/nick/eclipse.vdmj/CSK-Tests/target/test-classes/csksltest/pog/fulltest/CORE/recfun/recfun-07.vdm) at line 24:3
(forall l:seq of nat, g:Graph, vis:seq of nat &
  l = [] or (exists [h] ^ t:seq of nat & l = [h] ^ t))

